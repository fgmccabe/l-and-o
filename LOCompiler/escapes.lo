/* Automatically generated, do not edit */

lo.comp.escapes{

  import lo.
  import lo.comp.types.

  public escapeType:(string)=>tipe.
  escapeType("_exit") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_command_line") => funType(tupleType([]),typeExp(tpFun("lo.core*list",1),[tipe("lo.core*string")])).
  escapeType("_command_opts") => funType(tupleType([]),typeExp(tpFun("lo.core*list",1),[tupleType([tipe("lo.core*string"),tipe("lo.core*string")])])).
  escapeType("_unify") => univType(kVar("t"),predType(tupleType([kVar("t"),kVar("t")]))).
  escapeType("_identical") => univType(kVar("t"),predType(tupleType([kVar("t"),kVar("t")]))).
  escapeType("var") => univType(kVar("t"),predType(tupleType([kVar("t")]))).
  escapeType("nonvar") => univType(kVar("t"),predType(tupleType([kVar("t")]))).
  escapeType("_int_plus") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_int_minus") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_int_times") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_int_div") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_int_mod") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_flt_plus") => funType(tupleType([tipe("lo.core*float"),tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("_flt_minus") => funType(tupleType([tipe("lo.core*float"),tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("_flt_times") => funType(tupleType([tipe("lo.core*float"),tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("_flt_div") => funType(tupleType([tipe("lo.core*float"),tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("_flt_mod") => funType(tupleType([tipe("lo.core*float"),tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("_int_abs") => funType(tupleType([tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_flt_abs") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("_int_lt") => predType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")])).
  escapeType("_int_ge") => predType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")])).
  escapeType("_flt_lt") => predType(tupleType([tipe("lo.core*float"),tipe("lo.core*float")])).
  escapeType("_flt_ge") => predType(tupleType([tipe("lo.core*float"),tipe("lo.core*float")])).
  escapeType("_int2flt") => funType(tupleType([tipe("lo.core*integer")]),tipe("lo.core*float")).
  escapeType("_flt2int") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*integer")).
  escapeType("_flt_hash") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*integer")).
  escapeType("_pwr") => funType(tupleType([tipe("lo.core*float"),tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("sqrt") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("exp") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("log") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("log10") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("pi") => funType(tupleType([]),tipe("lo.core*float")).
  escapeType("sin") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("cos") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("tan") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("asin") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("acos") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("atan") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("trunc") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("floor") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("ceil") => funType(tupleType([tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("integral") => predType(tupleType([tipe("lo.core*float")])).
  escapeType("srand") => predType(tupleType([tipe("lo.core*float")])).
  escapeType("rand") => funType(tupleType([]),tipe("lo.core*float")).
  escapeType("irand") => funType(tupleType([tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_ldexp") => funType(tupleType([tipe("lo.core*float"),tipe("lo.core*float")]),tipe("lo.core*float")).
  escapeType("_frexp") => predType(tupleType([tipe("lo.core*float"),tipe("lo.core*float"),tipe("lo.core*integer")])).
  escapeType("_modf") => predType(tupleType([tipe("lo.core*float"),tipe("lo.core*float"),tipe("lo.core*float")])).
  escapeType("_band") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_bor") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_bxor") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_blsl") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_blsr") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_basr") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_bnot") => funType(tupleType([tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_nthb") => predType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer")])).
  escapeType("_get_file") => funType(tupleType([tipe("lo.core*string")]),tipe("lo.core*string")).
  escapeType("_put_file") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*string")])).
  escapeType("_cwd") => funType(tupleType([]),tipe("lo.core*string")).
  escapeType("_cd") => predType(tupleType([tipe("lo.core*string")])).
  escapeType("_rm") => predType(tupleType([tipe("lo.core*string")])).
  escapeType("_mv") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*string")])).
  escapeType("_mkdir") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer")])).
  escapeType("_rmdir") => predType(tupleType([tipe("lo.core*string")])).
  escapeType("_chmod") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer")])).
  escapeType("_ls") => funType(tupleType([tipe("lo.core*string")]),typeExp(tpFun("lo.core*list",1),[tipe("lo.core*string")])).
  escapeType("_file_mode") => funType(tupleType([tipe("lo.core*string")]),tipe("lo.core*integer")).
  escapeType("_file_present") => predType(tupleType([tipe("lo.core*string")])).
  escapeType("_file_type") => funType(tupleType([tipe("lo.core*string")]),tipe("lo.core*integer")).
  escapeType("_file_size") => funType(tupleType([tipe("lo.core*string")]),tipe("lo.core*integer")).
  escapeType("_file_modified") => funType(tupleType([tipe("lo.core*string")]),tipe("lo.core*float")).
  escapeType("_file_date") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer"),tipe("lo.core*integer"),tipe("lo.core*integer")])).
  escapeType("_openInFile") => funType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer")]),tipe("lo.io#file")).
  escapeType("_openOutFile") => funType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer")]),tipe("lo.io#file")).
  escapeType("_openAppendFile") => funType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer")]),tipe("lo.io#file")).
  escapeType("_openAppendIOFile") => funType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer")]),tipe("lo.io#file")).
  escapeType("_close") => predType(tupleType([tipe("lo.io#file")])).
  escapeType("_end_of_file") => predType(tupleType([tipe("lo.io#file")])).
  escapeType("_ready") => predType(tupleType([tipe("lo.io#file")])).
  escapeType("_inchars") => funType(tupleType([tipe("lo.io#file"),tipe("lo.core*integer")]),tipe("lo.core*string")).
  escapeType("_inbytes") => funType(tupleType([tipe("lo.io#file"),tipe("lo.core*integer")]),typeExp(tpFun("lo.core*list",1),[tipe("lo.core*integer")])).
  escapeType("_inchar") => funType(tupleType([tipe("lo.io#file")]),tipe("lo.core*integer")).
  escapeType("_inbyte") => funType(tupleType([tipe("lo.io#file")]),tipe("lo.core*integer")).
  escapeType("_inline") => funType(tupleType([tipe("lo.io#file"),tipe("lo.core*string")]),tipe("lo.core*string")).
  escapeType("_intext") => funType(tupleType([tipe("lo.io#file"),tipe("lo.core*string")]),tipe("lo.core*string")).
  escapeType("_outch") => predType(tupleType([tipe("lo.io#file"),tipe("lo.core*integer")])).
  escapeType("_outbyte") => predType(tupleType([tipe("lo.io#file"),tipe("lo.core*integer")])).
  escapeType("_outtext") => predType(tupleType([tipe("lo.io#file"),tipe("lo.core*string")])).
  escapeType("_stdfile") => funType(tupleType([tipe("lo.core*integer")]),tipe("lo.io#file")).
  escapeType("_fposition") => funType(tupleType([tipe("lo.io#file")]),tipe("lo.core*integer")).
  escapeType("_fseek") => predType(tupleType([tipe("lo.io#file"),tipe("lo.core*integer")])).
  escapeType("_flush") => predType(tupleType([tipe("lo.io#file")])).
  escapeType("_flushall") => predType(tupleType([])).
  escapeType("_setfileencoding") => predType(tupleType([tipe("lo.io#file"),tipe("lo.core*integer")])).
  escapeType("_logmsg") => predType(tupleType([tipe("lo.core*string")])).
  escapeType("_isCcChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isCfChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isCnChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isCoChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isCsChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isLlChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isLmChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isLoChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isLtChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isLuChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isMcChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isMeChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isMnChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isNdChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isNlChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isNoChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isPcChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isPdChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isPeChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isPfChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isPiChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isPoChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isPsChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isScChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isSkChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isSmChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isSoChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isZlChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isZpChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isZsChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_isLetterChar") => predType(tupleType([tipe("lo.core*integer")])).
  escapeType("_digitCode") => funType(tupleType([tipe("lo.core*integer")]),tipe("lo.core*integer")).
  escapeType("_int2str") => funType(tupleType([tipe("lo.core*integer"),tipe("lo.core*integer"),tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*string")).
  escapeType("_flt2str") => funType(tupleType([tipe("lo.core*float"),tipe("lo.core*integer"),tipe("lo.core*integer"),tipe("lo.core*logical"),tipe("lo.core*logical")]),tipe("lo.core*string")).
  escapeType("_str2flt") => funType(tupleType([tipe("lo.core*string")]),tipe("lo.core*float")).
  escapeType("_str_lt") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*string")])).
  escapeType("_str_ge") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*string")])).
  escapeType("_str_hash") => funType(tupleType([tipe("lo.core*string")]),tipe("lo.core*integer")).
  escapeType("_str_len") => funType(tupleType([tipe("lo.core*string")]),tipe("lo.core*integer")).
  escapeType("_str_gen") => funType(tupleType([tipe("lo.core*string")]),tipe("lo.core*string")).
  escapeType("_stringOf") => univType(kVar("t"),funType(tupleType([kVar("t"),tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*string"))).
  escapeType("_trim") => funType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer")]),tipe("lo.core*string")).
  escapeType("explode") => funType(tupleType([tipe("lo.core*string")]),typeExp(tpFun("lo.core*list",1),[tipe("lo.core*integer")])).
  escapeType("implode") => funType(tupleType([typeExp(tpFun("lo.core*list",1),[tipe("lo.core*integer")])]),tipe("lo.core*string")).
  escapeType("_str_find") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*string"),tipe("lo.core*integer"),tipe("lo.core*integer")])).
  escapeType("_sub_str") => funType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer"),tipe("lo.core*integer")]),tipe("lo.core*string")).
  escapeType("_str_split") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*integer"),tipe("lo.core*string"),tipe("lo.core*string")])).
  escapeType("_str_concat") => funType(tupleType([tipe("lo.core*string"),tipe("lo.core*string")]),tipe("lo.core*string")).
  escapeType("_str_start") => predType(tupleType([tipe("lo.core*string"),tipe("lo.core*string")])).

  public isEscape:(string){}.
  isEscape("_exit").
  isEscape("_command_line").
  isEscape("_command_opts").
  isEscape("_unify").
  isEscape("_identical").
  isEscape("var").
  isEscape("nonvar").
  isEscape("_int_plus").
  isEscape("_int_minus").
  isEscape("_int_times").
  isEscape("_int_div").
  isEscape("_int_mod").
  isEscape("_flt_plus").
  isEscape("_flt_minus").
  isEscape("_flt_times").
  isEscape("_flt_div").
  isEscape("_flt_mod").
  isEscape("_int_abs").
  isEscape("_flt_abs").
  isEscape("_int_lt").
  isEscape("_int_ge").
  isEscape("_flt_lt").
  isEscape("_flt_ge").
  isEscape("_int2flt").
  isEscape("_flt2int").
  isEscape("_flt_hash").
  isEscape("_pwr").
  isEscape("sqrt").
  isEscape("exp").
  isEscape("log").
  isEscape("log10").
  isEscape("pi").
  isEscape("sin").
  isEscape("cos").
  isEscape("tan").
  isEscape("asin").
  isEscape("acos").
  isEscape("atan").
  isEscape("trunc").
  isEscape("floor").
  isEscape("ceil").
  isEscape("integral").
  isEscape("srand").
  isEscape("rand").
  isEscape("irand").
  isEscape("_ldexp").
  isEscape("_frexp").
  isEscape("_modf").
  isEscape("_band").
  isEscape("_bor").
  isEscape("_bxor").
  isEscape("_blsl").
  isEscape("_blsr").
  isEscape("_basr").
  isEscape("_bnot").
  isEscape("_nthb").
  isEscape("_get_file").
  isEscape("_put_file").
  isEscape("_cwd").
  isEscape("_cd").
  isEscape("_rm").
  isEscape("_mv").
  isEscape("_mkdir").
  isEscape("_rmdir").
  isEscape("_chmod").
  isEscape("_ls").
  isEscape("_file_mode").
  isEscape("_file_present").
  isEscape("_file_type").
  isEscape("_file_size").
  isEscape("_file_modified").
  isEscape("_file_date").
  isEscape("_openInFile").
  isEscape("_openOutFile").
  isEscape("_openAppendFile").
  isEscape("_openAppendIOFile").
  isEscape("_close").
  isEscape("_end_of_file").
  isEscape("_ready").
  isEscape("_inchars").
  isEscape("_inbytes").
  isEscape("_inchar").
  isEscape("_inbyte").
  isEscape("_inline").
  isEscape("_intext").
  isEscape("_outch").
  isEscape("_outbyte").
  isEscape("_outtext").
  isEscape("_stdfile").
  isEscape("_fposition").
  isEscape("_fseek").
  isEscape("_flush").
  isEscape("_flushall").
  isEscape("_setfileencoding").
  isEscape("_logmsg").
  isEscape("_isCcChar").
  isEscape("_isCfChar").
  isEscape("_isCnChar").
  isEscape("_isCoChar").
  isEscape("_isCsChar").
  isEscape("_isLlChar").
  isEscape("_isLmChar").
  isEscape("_isLoChar").
  isEscape("_isLtChar").
  isEscape("_isLuChar").
  isEscape("_isMcChar").
  isEscape("_isMeChar").
  isEscape("_isMnChar").
  isEscape("_isNdChar").
  isEscape("_isNlChar").
  isEscape("_isNoChar").
  isEscape("_isPcChar").
  isEscape("_isPdChar").
  isEscape("_isPeChar").
  isEscape("_isPfChar").
  isEscape("_isPiChar").
  isEscape("_isPoChar").
  isEscape("_isPsChar").
  isEscape("_isScChar").
  isEscape("_isSkChar").
  isEscape("_isSmChar").
  isEscape("_isSoChar").
  isEscape("_isZlChar").
  isEscape("_isZpChar").
  isEscape("_isZsChar").
  isEscape("_isLetterChar").
  isEscape("_digitCode").
  isEscape("_int2str").
  isEscape("_flt2str").
  isEscape("_str2flt").
  isEscape("_str_lt").
  isEscape("_str_ge").
  isEscape("_str_hash").
  isEscape("_str_len").
  isEscape("_str_gen").
  isEscape("_stringOf").
  isEscape("_trim").
  isEscape("explode").
  isEscape("implode").
  isEscape("_str_find").
  isEscape("_sub_str").
  isEscape("_str_split").
  isEscape("_str_concat").
  isEscape("_str_start").

}.
