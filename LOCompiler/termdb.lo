lo.comp.termbase{
  import lo.
  import lo.repo.
  import lo.repo.file.
  import lo.uri.
  import lo.resources.

  import lo.comp.term.
  import lo.comp.encode.
  import lo.comp.decode.

  public loadTermBase:all r ~~ repository[r] |: (prProg,r) => map[term,rel].
  loadTermBase(Prog,Repo) => Code :-
    (_,Code) = loadMdlImports(mdlImports(Prog),empty,Repo,[]).
    -- _logmsg("code tree: \(dumpTree(Code,0))").

  loadMdlImports:all r ~~ repository[r] |: (list[pkg],set[pkg],r,map[term,rel]) => (set[pkg],map[term,rel]).
  loadMdlImports(Pkgs,SoFar,R,M) => foldLeft(((P,(S,Ms))=>loadTermPkg(P,S,R,Ms)),(SoFar,M),Pkgs).

  loadTermPkg:all r ~~ repository[r] |: (pkg,set[pkg],r,map[term,rel]) => (set[pkg],map[term,rel]).
  loadTermPkg(Pkg,SoFar,R,M) => (SoFar,M) :- Pkg in SoFar.
  loadTermPkg(Pkg,SoFar,R,M) => loadMdlImports(mdlImports(Mdl),addMem(Pkg,SoFar),R,M+mdlCode(Mdl)) :-
    -- _logmsg("Loading \(Pkg)"),
    Mdl = loadMdlFromRepo(Pkg,R).

  loadMdlFromRepo:all r ~~ repository[r] |: (pkg,r) => prProg.
  loadMdlFromRepo(Pkg,R) => decodeMdl(Txt) :-
    loadFromRepo(R,Pkg,"term",Txt).
}
