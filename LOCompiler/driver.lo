lo.comp.driver{
  import lo.
  import lo.uri.
  import lo.resources.

  import lo.comp.location.
  import lo.comp.ast.
  import lo.comp.grammar.
  import lo.comp.args.
  import lo.comp.canon.
  import lo.comp.catalog.
  import lo.comp.package.
  import lo.comp.typecheck.
  import lo.comp.repository.
  import lo.comp.errors.
  import lo.comp.grapher.
  
  -- Hint to the run-time:
  main:(list[string]){}.
  main(Args) :-
    opts = parseFlags(Args),
    processPkgs(opts.pkgs,locateCatalog(opts.wDir),opts).

  -- Temporary definition
  processPkgs:(list[pkg],catalog,compOption){}.
  processPkgs([],_,_).
  processPkgs([p,..l],c,o) :-
    resolveCatalog(c,p,u),
    processFile(u,o),
    processPkgs(l,c,o).

  processFile:(uri,compOption){}.
  processFile(u,o) :-
    Term = parseFile(u,reportBase,Er0),
    -- _logmsg("Error report after parsing: $(Er0)"),
    -- _logmsg(formatSS(disp(Term))),
    Repo = openRepository(o.repoDir),
    Prg = checkProgram(Term,o.version,Repo,Er0,ER),
    _logmsg("Checked program: $(Prg)"),
    _logmsg("$(ER)").
}