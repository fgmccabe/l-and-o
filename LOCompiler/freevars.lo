lo.comp.freevars{
  import lo.

  import lo.comp.canon.
  import lo.comp.location.
  import lo.comp.term.
  import lo.comp.types.

  public freeVarsInRule:(canonRule,list[term],list[term]) => list[term].
  freeVarsInRule(equation(_,_,A,Exp,Cond),Q,F) => freeVarsInGoal(Cond,Q,freeVars(Exp,Q,freeVars(A,Q,F))).
  freeVarsInRule(clause(_,_,A,Body),Q,F) => freeVarsInGoal(Body,Q,freeVars(A,Q,F)).
  freeVarsInRule(grRule(_,_,A,PB,Body),Q,F) => freeVarsInNT(PB,Q,freeVarsInNT(Body,Q,freeVars(A,Q,F))).

  freeVarsInRules:(list[canonRule],list[term],list[term]) => list[term].
  freeVarsInRules([],_,FV) => FV.
  freeVarsInRules([Rl,..L],Q,F) => freeVarsInRules(L,Q,freeVarsInRule(Rl,Q,F)).

  freeVarsList:(list[canonTerm],list[term],list[term]) => list[term].
  freeVarsList([],_,FV) => FV.
  freeVarsList([T,..L],Q,F) => freeVarsList(L,Q,freeVars(T,Q,F)).

  freeVars:(canonTerm,list[term],list[term]) => list[term].
  freeVars(v(_,Lb),Q,F) => [varbl(Lb),..F] :- varbl(Lb) in Q.
  freeVars(v(_,_),_,F) => F.
  freeVars(int(_),_,F) => F.
  freeVars(flt(_),_,F) => F.
  freeVars(str(_),_,F) => F.
  freeVars(tpl(Els),Q,F) => freeVarsList(Els,Q,F).
  freeVars(apply(_,Op,A),Q,F) =>freeVars(Op,Q,freeVars(A,Q,F)).
  freeVars(dot(_,Rc,_),Q,F) =>freeVars(Rc,Q,F).
  freeVars(whre(T,C),Q,F) => freeVars(T,Q,freeVarsInGoal(C,Q,F)).
  freeVars(condExp(C,T,E),Q,F) => freeVars(T,Q,freeVars(E,Q,freeVarsInGoal(C,Q,F))).
  freeVars(lambda(Rl),Q,F) => freeVarsInRule(Rl,Q,F).
  freeVars(theta(Defs,_),Q,F) => freeVarsInDefs(Defs,filterDefs(Defs,Q),F).

  freeVarsInGoal:(canonCond,list[term],list[term]) => list[term].
  freeVarsInGoal(trueCond,_,F) => F.
  freeVarsInGoal(falseCond,_,F) => F.
  freeVarsInGoal(conjCond(L,R),Q,F) => freeVarsInGoal(L,Q,freeVarsInGoal(R,Q,F)).
  freeVarsInGoal(disjCond(L,R),Q,F) => freeVarsInGoal(L,Q,freeVarsInGoal(R,Q,F)).
  freeVarsInGoal(forallCond(L,R),Q,F) => freeVarsInGoal(L,Q,freeVarsInGoal(R,Q,F)).
  freeVarsInGoal(condCond(T,L,R),Q,F) => freeVarsInGoal(T,Q,freeVarsInGoal(L,Q,freeVarsInGoal(R,Q,F))).
  freeVarsInGoal(unifyCond(_,L,R),Q,F) => freeVars(L,Q,freeVars(R,Q,F)).
  freeVarsInGoal(oneCond(L),Q,F) =>freeVarsInGoal(L,Q,F).
  freeVarsInGoal(negCond(L),Q,F) =>freeVarsInGoal(L,Q,F).
  freeVarsInGoal(callCond(_,Op,A),Q,F) =>freeVars(Op,Q,freeVars(A,Q,F)).
  freeVarsInGoal(isTrue(A),Q,F) => freeVars(A,Q,F).
  freeVarsInGoal(phraseCond(_,NT,L,R),Q,F) => freeVarsInNT(NT,Q,freeVars(L,Q,freeVars(R,Q,F))).

  freeVarsInNT:(canonNT,list[term],list[term]) => list[term].
  freeVarsInNT(grTerms(Terms),Q,F) => freeVarsInTerminals(Terms,Q,F).
  freeVarsInNT(grCall(_,Op,A),Q,F) =>freeVars(Op,Q,freeVars(A,Q,F)).
  freeVarsInNT(grTest(C),Q,F) => freeVarsInGoal(C,Q,F).
  freeVarsInNT(grDip(T,C),Q,F) => freeVarsInGoal(C,Q,freeVars(T,Q,F)).
  freeVarsInNT(grOne(C),Q,F) => freeVarsInNT(C,Q,F).
  freeVarsInNT(grNeg(C),Q,F) => freeVarsInNT(C,Q,F).
  freeVarsInNT(grAhed(C),Q,F) => freeVarsInNT(C,Q,F).
  freeVarsInNT(grDisj(L,R),Q,F) => freeVarsInNT(R,Q,freeVarsInNT(L,Q,F)).
  freeVarsInNT(grConj(L,R),Q,F) => freeVarsInNT(R,Q,freeVarsInNT(L,Q,F)).
  freeVarsInNT(grCond(T,L,R),Q,F) => freeVarsInNT(R,Q,freeVarsInNT(L,Q,freeVarsInNT(T,Q,F))).

  freeVarsInTerminals:(list[(location,canonTerm,canonTerm)],list[term],list[term]) => list[term].
  freeVarsInTerminals([],_,F) => F.
  freeVarsInTerminals([(_,_,T),..L],Q,F) => freeVarsInTerminals(L,Q,freeVars(T,Q,F)).

  freeVarsInDefs:(list[canonDef],list[term],list[term]) => list[term].
  freeVarsInDefs(Defs,Q,F) => findVarsInDefs(Defs,filterDefs(Defs,Q),F).

  findVarsInDefs:(list[canonDef],list[term],list[term]) => list[term].
  findVarsInDefs([],_,F) => F.
  findVarsInDefs([D,..L],Q,F) => findVarsInDefs(L,Q,freeVarsInDef(D,Q,F)).

  private filterDefs:(list[canonDef],list[term]) => list[term].
  filterDefs([],Vars) => Vars.
  filterDefs([D,..L],Vars) => filterDefs(L,filterDef(D,Vars)).

  private filterDef:(canonDef,list[term]) => list[term].
  filterDef(funDef(_,Nm,_,_,_),Vars) => subtract(varbl(Nm),Vars).
  filterDef(relDef(_,Nm,_,_,_),Vars) => subtract(varbl(Nm),Vars).
  filterDef(grammDef(_,Nm,_,_,_),Vars) => subtract(varbl(Nm),Vars).
  filterDef(classDef(_,Nm,_,_,_,_),Vars) => subtract(varbl(Nm),Vars).
  filterDef(varDef(_,Nm,_,_,_,_),Vars) => subtract(varbl(Nm),Vars).
  filterDef(_,Vars) => Vars.

  freeVarsInDef:(canonDef,list[term],list[term]) => list[term].
  freeVarsInDef(funDef(_,_,_,_,Rls),Q,F) => freeVarsInRules(Rls,Q,F).
  freeVarsInDef(relDef(_,_,_,_,Rls),Q,F) => freeVarsInRules(Rls,Q,F).
  freeVarsInDef(grammDef(_,_,_,_,Rls),Q,F) => freeVarsInRules(Rls,Q,F).
  freeVarsInDef(classDef(_,_,_,_,Rls,_),Q,F) => freeVarsInRules(Rls,Q,F).
  freeVarsInDef(varDef(_,_,_,_,L,C),Q,F) => freeVars(L,Q,freeVarsInGoal(C,Q,F)).
  freeVarsInDef(otherDef(_,Ot),Q,F) => freeVarsInOther(Ot,Q,F).
  freeVarsInDef(implDef(_,_,_,_,_,L,R,_),Q,F) => freeVars(R,Q,freeVars(L,Q,F)).
  freeVarsInDef(_,_,F) => F.

  freeVarsInOther:(canonOther,list[term],list[term]) => list[term].
  freeVarsInOther(integrity(_,C),Q,F) => freeVarsInGoal(C,Q,F).
  freeVarsInOther(expShow(_,E),Q,F) => freeVars(E,Q,F).
}
