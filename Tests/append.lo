test.append{
  import lo.
  import lo.unit.

  -- Test regular append and 'slow' append

  private naive:all t ~~ (list[t],list[t]){}.
  naive([],[]).
  naive([E,..L],R) :- naive(L,I),append(I,[E],R).

  private append:all t ~~ (list[t],list[t],list[t]){}.
  append([],X,X).
  append([E,..X],Y,[E,..Z]) :- append(X,Y,Z).

  naivetest:(integer,integer) <=> harness.
  naivetest(i,Ln)<={
    desc = "naive reverse test".
    doTest() :- O = iota(1,Ln), iter(i,O).

    iter:all t ~~ (integer,list[t]){}.
    iter(0,_).
    iter(N,I):- naive(I,_),iter(N-1,I).
  }.

  assert checkUnit(naivetest(1,300)).
}
