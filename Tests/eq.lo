test.eq{
  contract all a ~~ equality[a] ::= {
    (==): (a,a){}.
  }

  public (\==):all x ~~ equality[x] |: (x,x){}.
  x \== y :- \+ x==y.

  -- We need the list type in the core
  all t ~~ list[t] ::= '[]' | ',..'(t,list[t]).

  -- Implement equality for lists
  public
  implementation all x ~~ equality[x] |: equality[list[x]] => {
    L1 == L2 :- listEq(L1,L2).
  }

  private
  listEq:all x ~~ equality[x] |: (list[x],list[x]){}.
  listEq([],[]).
  listEq([E1,..L1],[E2,..L2]) :- E1==E2, listEq(L1,L2).

  public implementation equality[integer] => {
    X == X.
  }

  assert [1,2,3] == [1,2,3].

  assert [1,2,3] \== [1,3,2].
}
