test.l{
  public type thing <~ {}.

  public contract all x ~~ equality[x] <~ {
    (==): (x,x){}.
    hash:(x)=>integer.
  }

  public implementation equality[integer] .. {
    X == X.
    hash(X) => X.
  }

  private (\==):all x ~~ equality[x] |: (x,x){}.
  x \== y :- \+ x==y.

  assert 3==3.

  nameOf:all x,n ~~ x<~{name:n} |: (x)=>n.
  nameOf(O) => O.name.

  type person <~ { name:string. age:integer}.

  someone:(string,integer)<=>person.
  someone(N,A){
    name=N.
    age=A.
  }

  assert nameOf(someone("fred",10))="fred".
}