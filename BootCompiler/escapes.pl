/* Automatically generated, do not edit */

:-module(escapes,[isEscape/1,escapeType/2]).

escapeType("exit",funType([type("lo.std*integer")],voidType)).
escapeType("_command_line",funType([],typeExp("lo.std*list",[type("lo.std*string")]))).
escapeType("_command_opts",funType([],typeExp("lo.std*list",[tupleType([type("lo.std*string"),type("lo.std*string")])]))).
escapeType("_unify",univType(kVar("t"),predType([kVar("t"),kVar("t")]))).
escapeType("_identical",univType(kVar("t"),predType([kVar("t"),kVar("t")]))).
escapeType("_match",univType(kVar("t"),predType([kVar("t"),kVar("t")]))).
escapeType("var",univType(kVar("t"),predType([kVar("t")]))).
escapeType("nonvar",univType(kVar("t"),predType([kVar("t")]))).
escapeType("_int_plus",funType([type("lo.std*integer"),type("lo.std*integer")],type("lo.std*integer"))).
escapeType("_int_minus",funType([type("lo.std*integer"),type("lo.std*integer")],type("lo.std*integer"))).
escapeType("_int_times",funType([type("lo.std*integer"),type("lo.std*integer")],type("lo.std*integer"))).
escapeType("_int_div",funType([type("lo.std*integer"),type("lo.std*integer")],type("lo.std*integer"))).
escapeType("_flt_plus",funType([type("lo.std*float"),type("lo.std*float")],type("lo.std*float"))).
escapeType("_flt_minus",funType([type("lo.std*float"),type("lo.std*float")],type("lo.std*float"))).
escapeType("_flt_times",funType([type("lo.std*float"),type("lo.std*float")],type("lo.std*float"))).
escapeType("_flt_div",funType([type("lo.std*float"),type("lo.std*float")],type("lo.std*float"))).
escapeType("_int_abs",funType([type("lo.std*integer")],type("lo.std*integer"))).
escapeType("_flt_abs",funType([type("lo.std*float")],type("lo.std*float"))).
isEscape("exit").
isEscape("_command_line").
isEscape("_command_opts").
isEscape("_unify").
isEscape("_identical").
isEscape("_match").
isEscape("var").
isEscape("nonvar").
isEscape("_int_plus").
isEscape("_int_minus").
isEscape("_int_times").
isEscape("_int_div").
isEscape("_flt_plus").
isEscape("_flt_minus").
isEscape("_flt_times").
isEscape("_flt_div").
isEscape("_int_abs").
isEscape("_flt_abs").
