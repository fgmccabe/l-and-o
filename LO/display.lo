lo.display{
  import lo.core.
  import lo.list.

  -- Structured string - ss - allows post formatting.
  -- The ss type is layered into two parts. This one enriches the type with more cases.

  public ssFormat:(string,ss) <=> ss.
  ssFormat(Fmt,S) .. {}.

  -- The display contract itself
  public all t ~~ display[t] <~ {
    display:(t+) => ss.
  }.

  -- To avoid circular dependency, we must implement display for what we import

  public thingDisp : display[thing].
  thingDisp .. {
    display(_) => ss("thing").
  }.

  public stringDisp : display[string].
  stringDisp .. {
    display(S) => ssSeq([ss("\""),ss(S),ss("\"")]).
  }.

  public
  listDisp : all t ~~ (display[t]) <=> display[list[t]].
  listDisp(ED) .. {
    display([]) => ss("[]").
    display([E,..Y]) => ssSeq([ss("["),ED.display(E),displayMore(Y)]).

    displayMore : (list[t]) => ss.
    displayMore([]) => ss("]").
    displayMore([E,..M]) => ssSeq([ss(","),ED.display(E),displayMore(M)]).
  }.
  
}