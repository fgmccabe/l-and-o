lo.display{
  import lo.thing.
  import lo.string.
  import lo.list.

  all t ~~ display[t] <~ {
    display:(t+) => ss.
  }.

  -- Structured string - ss - allows post formatting.
  ss ::= ss(string) | ssSeq(list[ss]) | ssFormat(string,ss).

  -- To avoid circular dependency, we must implement display for what we import

  thingDisp : display[thing].
  thingDisp .. {
    display(_) => ss("thing").
  }.

  stringDisp : display[string].
  stringDisp .. {
    display(S) => ssSeq([ss("\""),ss(S),ss("\"")]).
  }.

  listDisp : all t ~~ (display[t]) <=> display[list[t]].
  listDisp(ED) .. {
    display([]) => ss("[]").
    display([E,..Y]) => ssSeq([ss("["),ED.display(E),displayMore(Y)]).

    displayMore : (list[t]) => ss.
    displayMore([]) => ss("]").
    displayMore([E,..M]) => ssSeq([ss(","),ED.display(E),displayMore(M)]).
  }.
}