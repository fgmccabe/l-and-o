lo.list{
  -- implement standard list functions
  import lo.core.

  public (<>):all t ~~ (list[t],list[t])=>list[t].
  [] <> X => X.
  [E,..X] <> Y => [E,..X<>Y].

  public (in):all t ~~ (t,list[t]){}.
  X in [X,.._].
  X in [_,..Y] :- X in Y.

  public reverse:all t ~~ (list[t]) => list[t].
  reverse(X) => rev(X,[]).

  private
  rev:all t ~~ (list[t],list[t]) => list[t].
  rev([],R) => R.
  rev([E,..L],R) => rev(L,[E,..R]).

  public drop:all t ~~ (list[t]) => list[t].
  drop([_,..L]) => L.

  public isMember:all t ~~ (t,list[t]){}.
  isMember(E,[E,.._]).
  isMember(E,[_,..L]) :- isMember(E,L).

  public subtract:all t ~~ (t,list[t])=>list[t].
  subtract(_,[]) => [].
  subtract(E,[E,..R]) => R.
  subtract(E,[X,..R]) => [E,..subtract(E,R)].

  public
  length:all t ~~ (list[t]) => integer.
  length([]) => 0.
  length([_,..L]) => length(L)+1.
}