lo.sort{
  /* Merge Sort function */

  import lo.core.

  public sort:all e ~~ (list[e],(e,e){}) => list[e].
  sort(L,P) => mergeSort(L,P).

  mergeSort:all e ~~ (list[e],(e,e){}) => list[e].
  mergeSort([],_) => [].
  mergeSort([e],_) => [e].
  mergeSort(L,P) => merge(mergeSort(L1,P),mergeSort(L2,P),P) :- split(L,L1,L2).

  split:all e ~~ (list[e],list[e],list[e]){}.
  split([],[],[]).
  split([e],[],[e]).
  split([e1,e2,..L],[e1,..L1],[e2,..L2]) :- split(L,L1,L2).

  merge:all e ~~ (list[e],list[e],(e,e){}) => list[e].
  merge([],L,_) => L.
  merge(L,[],_) => L.
  merge([d,..L1],[e,..L2],P) => [d,..merge(L1,[e,..L2],P)] :- P(d,e).
  merge(L1,[e,..L2],P) => [e,..merge(L1,L2,P)].
}