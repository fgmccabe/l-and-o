# [PackageDev] target_format: plist, ext: tmLanguage
---
name: L&O
scopeName: source.lo
fileTypes: [lo]
uuid: f9d6df3a-56b4-46cd-b501-0e462195e22b

patterns:

- comment: Block comments
  name: comment.block
  begin: /\*
  end: \*/

- comment: Operators, quite a few of these ..
  name: keyword.control
  match: (~~|::=|\||\?|<=>|<=|=>|:--|:-|-->|->>|->|,|,\.\.|<~|::|=|\\=|\.\.|\%\%|\^|\~|\.|#|@|:|!)

- comment: Operators, quite a few of these ..
  name: keyword.operator
  match: (\*>|\|\||==|\\==|<|=<|>=|>|\.=|=\.|\bin\b|<>|\+|\b-\b|\*|/|%|\brem\b|\*\*)

- comment: Line comment
  name: comment.line
  match: '[^:]--[ \t].*'

- comment: Not many keywords in L&O
  name: keyword.other
  match: \b(true|false|this|void|private|public|import|all|type|contract|implementation)\b

- comment: String literal
  name: string.quoted.double
  begin: \"
  end: \"

  patterns:
  - name: escape.var.lo
    match: \$(\w+)
    captures:
      '1' : {name: identifier.lo}
  - name: string.interpolated
    begin: \$\(
    end: \)
    patterns:
      - include: $self
  - name: char
    match: (\\.|.)

- comment: Numeric literals
  name: constant.numeric
  match: ((0c(\\u[0-9a-fA-F]+;|\\.|.))|(\d+(\.\d+([eE][-+]?\d+)?)?)|(0x[0-9a-zA-F]*))

- comment: Variable definition
  name: entity.name.function
  match: (\w+) *[^:][:][^:] *(.*)\.
  captures:
    '1' : {name: variable}
    '2' : {name: type}

...